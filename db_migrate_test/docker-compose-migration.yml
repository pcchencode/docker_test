version: '3.7'

services:
  vault:
    image: vault:${VAULT_VERSION}
    environment:
      VAULT_TOKEN: ${VAULT_TOKEN}
      VAULT_ADDR: ${VAULT_ADDR}
      VAULT_PATH: ${VAULT_PATH}
    networks:
      - deployment
    volumes:
      - type: volume
        source: share
        target: "/config"
    entrypoint: sh -c "vault kv get -field=config ${VAULT_PATH} | grep migration | tr -d \"';\" | head -1 > /config/secret"

  yq:
    image: mikefarah/yq
    networks:
      - deployment
    volumes:
      - type: volume
        source: yq
        target: "/usr/bin"

  db-migration:
    image: ${ECR_REPO}/ll_db_migration:${DB_MIGRATE_VERSION}
    working_dir: /db-migration
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
    networks:
      - deployment
    volumes:
      - type: volume
        source: share
        target: "/config"
      - type: volume
        source: yq
        target: "/root/bin"
      - ${PWD}:/db-migration
    depends_on:
      - "vault"
      - "yq"
    entrypoint:
      - "sh"
      - "-c"
      - "PATH=/root/bin:$PATH \
            && while [ ! -s /config/secret ]; do echo 'waiting for vault'; sleep 1; done \
            && cp db/config.yml.template db/config.yml \
            && yq write -i db/config.yml development.host ${DB_HOST} \
            && yq write -i db/config.yml development.database ${DB_NAME} \
            && yq write -i db/config.yml development.username $$(cat /config/secret | awk '{print $$3}' | awk -F '@' '{print $$1}') \
            && yq write -i db/config.yml development.password $$(cat /config/secret | awk '{print $$NF}') \
            && bundle install \
            && bundle exec rake db:migrate \
            && rm db/config.yml"

networks:
  deployment:

volumes:
  share:
  yq:
